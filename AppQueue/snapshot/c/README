AppQueue Release Notes 
Copyright (c) 2009 - 2010 Carbon Mountain LLC 
http://www.carbonmountain.com

-------------------------------------------------------------------

Release 0.6.2:	
Release 0.6.1:	Bug Fixes
Release 0.6.0:	Initial Public Release

-------------------------------------------------------------------


appmods/			AppQueue Module Framework
appqueue.c			AppQueue main C file
appqueue_cli.c			AppQueue CLI
appqueue_cli_fw.c		AppQueue CLI Firewall
appqueue_cli_storage.c		AppQueue CLI Storage
appqueue_install.c		AppQueue Install / Fetch code
appqueue_shm.c			AppQueue Shared Memory code
include/			Header files
LICENSE				GPL v2 License
Makefile			Makefile
README				Release Notes
tmp				template C file

-------------------------------------------------------------------

What is AppQueue (the project) ?

AppQueue is an Open Source application that provides a management
CLI for the KaOS Hypervisor Platform. AppQueue also provides
access to public AppQueues which hold various App Modules.

Unlike package repositories, AppQueues are designed to hold only
the current latest version of the software. App Modules within
the AppQueue are easily Quality Controlled because they are self
contain environments, they either work or they do not. There are
no dependencies, no unknown variables to interact with. 

In a typical environment there are three Queues offered:

 - Development Queue (containing the latest development code)
 - Edge Queue (containing the latest stable code)
 - Stable Queue (containing reasonable new, but time-tested code)

-------------------------------------------------------------------

What is an App Module

App Modules are an alternative to package management and operating
system images. App Modules are self-contained mini-environments
that contain the exact libraries and tools for the App Module to
function. App Modules consist of three components:

 - AppQueue Image (.aqi file) a compress file system image
 - climod.aq (cli module) this extends the CLI for this app
 - appmgr.aq (mgr module) which manages the config / monitoring

App Modules are used by the KaOS Hypervisor either standalone or
in groups to automatically create Virtual Appliance / Virtual
Guest images. 

-------------------------------------------------------------------


Building:

 AppQueue is designed to be built within the KaOS SDK. It is
recommended that you download the KaOS SDK from :

	http://www.carbonmountain.com

 Then install this source code inside /src/ within the SDK,
chroot to it, and run make.

-------------------------------------------------------------------

Installation:

 Copy resulting appqueue executible to :

 /src/kaos.fs/kaos/core/aq/appqueue

 Re-run the cpio generation commands (see SDK documentation).
 Rebuild your KaOS-enabled kernel with the new cpio image.

-------------------------------------------------------------------

How it works:

 This project interacts with kattach, an init replacement for the
KaOS Hypervisor platform. This project is used to configure kattach,
obtain system information from kattach and perform operational tasks
such as starting / stopping / deleting virtual machines. 

 The interaction between kattach and AppQueue is performed using
shared memory. These files are located in /dev/shm/. While AppQueue
can create these files, it expects these files to be generated by
kattach. In a standard KaOS system, kattach boots before AppQueue
is even accessible, so kattach always creates these files.

-------------------------------------------------------------------

Rapid Developing:

 To make it easier to develop AppQueue, it can be developed without
needing kattach in most cases. You will need to edit the 
include/appqueue.h file, locate the UID define, and modify it to match
your current user. 

 To develop / test App Modules, the same thing is possible. You will
need to edit or comment out the absolute paths for relative paths that
you are using for testing. See the source code for details.

-------------------------------------------------------------------

App Module Code:

 The App Module code included with this project is intended for
demonstration purposes only. You will need to edit the code to make
it do anything useful. However it should demonstrate how to write
a basic module. The demo module read/writes and stores in the db a
config_option value. 

 The climod.aq executable writes data back, based on the configuration
to shared memory. The appmgr.aq executable will detect the change,
read the information and then write it out to the database. When
the climode.aq is used again, the data from the database is populated
back into shared memory by the appmgr.aq executable. It should remain
running while you are testing, as it remains running when kattach
launches it.

 The system works using a config group identifer. This config group
is created by AppQueue CLI but its simply a name (string). This unique
string is used by appmgr.aq to identify which database table to read
from, as it uses it to name the database table. This is what provides
the mechanism to read/write multiple configurations using this simple
code.

 The appmgr.aq will write the configuration files back to the raw/
directory using /app/am/cfg/<group_name>/raw/ as the path. The
kattach application will then use the raw/ directory as the basis
for the configuration of a virtual machine.

-------------------------------------------------------------------

Questions... Need Help... Better Documentation? :)

Visit:

 http://forums.carbonmountain.com


